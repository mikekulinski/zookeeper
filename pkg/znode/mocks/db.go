// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mikekulinski/zookeeper/pkg/znode (interfaces: ZKDB)
//
// Generated by this command:
//
//	mockgen -destination mocks/db.go . ZKDB
//

// Package mock_znode is a generated GoMock package.
package mock_znode

import (
	reflect "reflect"

	znode "github.com/mikekulinski/zookeeper/pkg/znode"
	zookeeper "github.com/mikekulinski/zookeeper/proto"
	gomock "go.uber.org/mock/gomock"
)

// MockZKDB is a mock of ZKDB interface.
type MockZKDB struct {
	ctrl     *gomock.Controller
	recorder *MockZKDBMockRecorder
}

// MockZKDBMockRecorder is the mock recorder for MockZKDB.
type MockZKDBMockRecorder struct {
	mock *MockZKDB
}

// NewMockZKDB creates a new mock instance.
func NewMockZKDB(ctrl *gomock.Controller) *MockZKDB {
	mock := &MockZKDB{ctrl: ctrl}
	mock.recorder = &MockZKDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockZKDB) EXPECT() *MockZKDBMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockZKDB) Create(arg0 *zookeeper.Transaction) (*znode.ZNode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*znode.ZNode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockZKDBMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockZKDB)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockZKDB) Delete(arg0 *zookeeper.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockZKDBMockRecorder) Delete(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockZKDB)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockZKDB) Get(arg0 string) *znode.ZNode {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*znode.ZNode)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockZKDBMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockZKDB)(nil).Get), arg0)
}

// SetData mocks base method.
func (m *MockZKDB) SetData(arg0 *zookeeper.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetData", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetData indicates an expected call of SetData.
func (mr *MockZKDBMockRecorder) SetData(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetData", reflect.TypeOf((*MockZKDB)(nil).SetData), arg0)
}
