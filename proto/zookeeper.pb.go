// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: zookeeper.proto

package zookeeper

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRequest_Flag int32

const (
	// FLAG_EPHEMERAL indicates that the ZNode to be created should be automatically destroyed once the session
	// has been terminated (either intentionally or on failure).
	CreateRequest_FLAG_EPHEMERAL CreateRequest_Flag = 0
	// FLAG_SEQUENTIAL indicates that the node to be created should have a monotonically increasing counter appended
	// to the end of the provided name.
	CreateRequest_FLAG_SEQUENTIAL CreateRequest_Flag = 1
)

// Enum value maps for CreateRequest_Flag.
var (
	CreateRequest_Flag_name = map[int32]string{
		0: "FLAG_EPHEMERAL",
		1: "FLAG_SEQUENTIAL",
	}
	CreateRequest_Flag_value = map[string]int32{
		"FLAG_EPHEMERAL":  0,
		"FLAG_SEQUENTIAL": 1,
	}
)

func (x CreateRequest_Flag) Enum() *CreateRequest_Flag {
	p := new(CreateRequest_Flag)
	*p = x
	return p
}

func (x CreateRequest_Flag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateRequest_Flag) Descriptor() protoreflect.EnumDescriptor {
	return file_zookeeper_proto_enumTypes[0].Descriptor()
}

func (CreateRequest_Flag) Type() protoreflect.EnumType {
	return &file_zookeeper_proto_enumTypes[0]
}

func (x CreateRequest_Flag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateRequest_Flag.Descriptor instead.
func (CreateRequest_Flag) EnumDescriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{1, 0}
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: This is a placeholder value. Not sure if we even need anything.
	SentTsMs uint64 `protobuf:"varint,1,opt,name=sent_ts_ms,json=sentTsMs,proto3" json:"sent_ts_ms,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{0}
}

func (x *Heartbeat) GetSentTsMs() uint64 {
	if x != nil {
		return x.SentTsMs
	}
	return 0
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode that we'd like to create. Follows standard Unix file path conventions.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The data that we'd like to save in the ZNode we're creating.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Flags are an optional array of arguments to create different types of ZNodes.
	Flags []CreateRequest_Flag `protobuf:"varint,3,rep,packed,name=flags,proto3,enum=zookeeper.CreateRequest_Flag" json:"flags,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateRequest) GetFlags() []CreateRequest_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name that Zookeeper has given to the ZNode. This is relevant when passing FLAG_SEQUENTIAL since the server
	// will add a monotonically increasing as a suffix to the name.
	ZNodeName string `protobuf:"bytes,1,opt,name=z_node_name,json=zNodeName,proto3" json:"z_node_name,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{2}
}

func (x *CreateResponse) GetZNodeName() string {
	if x != nil {
		return x.ZNodeName
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode that we'd like to delete.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The version that this ZNode is expected to be at. If the versions do not match, then we will fail the request.
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{4}
}

type ExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode we are checking.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// A flag indicating whether we would like to receive a callback for when this file changes.
	Watch bool `protobuf:"varint,2,opt,name=watch,proto3" json:"watch,omitempty"`
}

func (x *ExistsRequest) Reset() {
	*x = ExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsRequest) ProtoMessage() {}

func (x *ExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsRequest.ProtoReflect.Descriptor instead.
func (*ExistsRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{5}
}

func (x *ExistsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ExistsRequest) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

type ExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether or not that file exists.
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsResponse) Reset() {
	*x = ExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResponse) ProtoMessage() {}

func (x *ExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResponse.ProtoReflect.Descriptor instead.
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{6}
}

func (x *ExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type GetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode we are checking.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// A flag indicating whether we would like to receive a callback for when this file changes.
	Watch bool `protobuf:"varint,2,opt,name=watch,proto3" json:"watch,omitempty"`
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{7}
}

func (x *GetDataRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDataRequest) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

type GetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The data saved at this ZNode.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// The version of this ZNode.
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{8}
}

func (x *GetDataResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetDataResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode we are checking.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The data to save on this ZNode.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// The version we expect this ZNode to be at.
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SetDataRequest) Reset() {
	*x = SetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDataRequest) ProtoMessage() {}

func (x *SetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDataRequest.ProtoReflect.Descriptor instead.
func (*SetDataRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{9}
}

func (x *SetDataRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetDataRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetDataRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDataResponse) Reset() {
	*x = SetDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDataResponse) ProtoMessage() {}

func (x *SetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDataResponse.ProtoReflect.Descriptor instead.
func (*SetDataResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{10}
}

type GetChildrenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode we are checking.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// A flag indicating whether we would like to receive a callback for when any of the children of this ZNode change.
	Watch bool `protobuf:"varint,2,opt,name=watch,proto3" json:"watch,omitempty"`
}

func (x *GetChildrenRequest) Reset() {
	*x = GetChildrenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildrenRequest) ProtoMessage() {}

func (x *GetChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildrenRequest.ProtoReflect.Descriptor instead.
func (*GetChildrenRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{11}
}

func (x *GetChildrenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetChildrenRequest) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

type GetChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The file names of the children of the requested ZNode. This is just the file name. You can get the full path
	// by appending this to the path to the parent.
	// i.e. {parent_path}/{child_name}
	Children []string `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GetChildrenResponse) Reset() {
	*x = GetChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildrenResponse) ProtoMessage() {}

func (x *GetChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildrenResponse.ProtoReflect.Descriptor instead.
func (*GetChildrenResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{12}
}

func (x *GetChildrenResponse) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual file path to the ZNode we are checking. This path is currently unused.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{13}
}

func (x *SyncRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{14}
}

type ZookeeperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ZookeeperRequest_Heartbeat
	//	*ZookeeperRequest_Create
	//	*ZookeeperRequest_Delete
	//	*ZookeeperRequest_Exists
	//	*ZookeeperRequest_GetData
	//	*ZookeeperRequest_SetData
	//	*ZookeeperRequest_GetChildren
	//	*ZookeeperRequest_Sync
	Message isZookeeperRequest_Message `protobuf_oneof:"message"`
}

func (x *ZookeeperRequest) Reset() {
	*x = ZookeeperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZookeeperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZookeeperRequest) ProtoMessage() {}

func (x *ZookeeperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZookeeperRequest.ProtoReflect.Descriptor instead.
func (*ZookeeperRequest) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{15}
}

func (m *ZookeeperRequest) GetMessage() isZookeeperRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ZookeeperRequest) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetMessage().(*ZookeeperRequest_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *ZookeeperRequest) GetCreate() *CreateRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_Create); ok {
		return x.Create
	}
	return nil
}

func (x *ZookeeperRequest) GetDelete() *DeleteRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *ZookeeperRequest) GetExists() *ExistsRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_Exists); ok {
		return x.Exists
	}
	return nil
}

func (x *ZookeeperRequest) GetGetData() *GetDataRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_GetData); ok {
		return x.GetData
	}
	return nil
}

func (x *ZookeeperRequest) GetSetData() *SetDataRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_SetData); ok {
		return x.SetData
	}
	return nil
}

func (x *ZookeeperRequest) GetGetChildren() *GetChildrenRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_GetChildren); ok {
		return x.GetChildren
	}
	return nil
}

func (x *ZookeeperRequest) GetSync() *SyncRequest {
	if x, ok := x.GetMessage().(*ZookeeperRequest_Sync); ok {
		return x.Sync
	}
	return nil
}

type isZookeeperRequest_Message interface {
	isZookeeperRequest_Message()
}

type ZookeeperRequest_Heartbeat struct {
	// To prevent the session from timing out, the ZooKeeper client library sends a heartbeat after the session
	// has been idle for s/3 ms and switch to a new server if it has not heard from a server for 2s/3 ms,
	// where s is the session timeout in milliseconds.
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type ZookeeperRequest_Create struct {
	// Create creates a ZNode with path name path, stores data in it, and returns the name of the new ZNode
	// Flags can also be passed to pick certain attributes you want the ZNode to have.
	Create *CreateRequest `protobuf:"bytes,2,opt,name=create,proto3,oneof"`
}

type ZookeeperRequest_Delete struct {
	// Delete deletes the ZNode at the given path if that ZNode is at the expected version.
	Delete *DeleteRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

type ZookeeperRequest_Exists struct {
	// Exists returns true if the ZNode with path name path exists, and returns false otherwise. The watch flag
	// enables a client to set a watch on the ZNode.
	Exists *ExistsRequest `protobuf:"bytes,4,opt,name=exists,proto3,oneof"`
}

type ZookeeperRequest_GetData struct {
	// GetData returns the data and metadata, such as version information, associated with the ZNode.
	// The watch flag works in the same way as it does for exists(), except that ZooKeeper does not set the watch
	// if the ZNode does not exist.
	GetData *GetDataRequest `protobuf:"bytes,5,opt,name=get_data,json=getData,proto3,oneof"`
}

type ZookeeperRequest_SetData struct {
	// SetData writes data to the ZNode path if the version number is the current version of the ZNode.
	SetData *SetDataRequest `protobuf:"bytes,6,opt,name=set_data,json=setData,proto3,oneof"`
}

type ZookeeperRequest_GetChildren struct {
	// GetChildren returns the set of names of the children of a ZNode.
	GetChildren *GetChildrenRequest `protobuf:"bytes,7,opt,name=get_children,json=getChildren,proto3,oneof"`
}

type ZookeeperRequest_Sync struct {
	// Sync waits for all updates pending at the start of the operation to propagate to the server
	// that the client is connected to. The path is currently ignored. (Using path is not discussed in the white paper)
	Sync *SyncRequest `protobuf:"bytes,8,opt,name=sync,proto3,oneof"`
}

func (*ZookeeperRequest_Heartbeat) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_Create) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_Delete) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_Exists) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_GetData) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_SetData) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_GetChildren) isZookeeperRequest_Message() {}

func (*ZookeeperRequest_Sync) isZookeeperRequest_Message() {}

type ZookeeperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ZookeeperResponse_Create
	//	*ZookeeperResponse_Delete
	//	*ZookeeperResponse_Exists
	//	*ZookeeperResponse_GetData
	//	*ZookeeperResponse_SetData
	//	*ZookeeperResponse_GetChildren
	//	*ZookeeperResponse_Sync
	//	*ZookeeperResponse_WatchEvent
	Message isZookeeperResponse_Message `protobuf_oneof:"message"`
}

func (x *ZookeeperResponse) Reset() {
	*x = ZookeeperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zookeeper_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZookeeperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZookeeperResponse) ProtoMessage() {}

func (x *ZookeeperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zookeeper_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZookeeperResponse.ProtoReflect.Descriptor instead.
func (*ZookeeperResponse) Descriptor() ([]byte, []int) {
	return file_zookeeper_proto_rawDescGZIP(), []int{16}
}

func (m *ZookeeperResponse) GetMessage() isZookeeperResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ZookeeperResponse) GetCreate() *CreateResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_Create); ok {
		return x.Create
	}
	return nil
}

func (x *ZookeeperResponse) GetDelete() *DeleteResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *ZookeeperResponse) GetExists() *ExistsResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_Exists); ok {
		return x.Exists
	}
	return nil
}

func (x *ZookeeperResponse) GetGetData() *GetDataResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_GetData); ok {
		return x.GetData
	}
	return nil
}

func (x *ZookeeperResponse) GetSetData() *SetDataResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_SetData); ok {
		return x.SetData
	}
	return nil
}

func (x *ZookeeperResponse) GetGetChildren() *GetChildrenResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_GetChildren); ok {
		return x.GetChildren
	}
	return nil
}

func (x *ZookeeperResponse) GetSync() *SyncResponse {
	if x, ok := x.GetMessage().(*ZookeeperResponse_Sync); ok {
		return x.Sync
	}
	return nil
}

func (x *ZookeeperResponse) GetWatchEvent() *WatchEvent {
	if x, ok := x.GetMessage().(*ZookeeperResponse_WatchEvent); ok {
		return x.WatchEvent
	}
	return nil
}

type isZookeeperResponse_Message interface {
	isZookeeperResponse_Message()
}

type ZookeeperResponse_Create struct {
	Create *CreateResponse `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type ZookeeperResponse_Delete struct {
	Delete *DeleteResponse `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type ZookeeperResponse_Exists struct {
	Exists *ExistsResponse `protobuf:"bytes,3,opt,name=exists,proto3,oneof"`
}

type ZookeeperResponse_GetData struct {
	GetData *GetDataResponse `protobuf:"bytes,4,opt,name=get_data,json=getData,proto3,oneof"`
}

type ZookeeperResponse_SetData struct {
	SetData *SetDataResponse `protobuf:"bytes,5,opt,name=set_data,json=setData,proto3,oneof"`
}

type ZookeeperResponse_GetChildren struct {
	GetChildren *GetChildrenResponse `protobuf:"bytes,6,opt,name=get_children,json=getChildren,proto3,oneof"`
}

type ZookeeperResponse_Sync struct {
	Sync *SyncResponse `protobuf:"bytes,7,opt,name=sync,proto3,oneof"`
}

type ZookeeperResponse_WatchEvent struct {
	WatchEvent *WatchEvent `protobuf:"bytes,8,opt,name=watch_event,json=watchEvent,proto3,oneof"`
}

func (*ZookeeperResponse_Create) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_Delete) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_Exists) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_GetData) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_SetData) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_GetChildren) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_Sync) isZookeeperResponse_Message() {}

func (*ZookeeperResponse_WatchEvent) isZookeeperResponse_Message() {}

var File_zookeeper_proto protoreflect.FileDescriptor

var file_zookeeper_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x1a, 0x0b, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x09, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x73, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74,
	0x54, 0x73, 0x4d, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x46,
	0x4c, 0x41, 0x47, 0x5f, 0x45, 0x50, 0x48, 0x45, 0x4d, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x49,
	0x41, 0x4c, 0x10, 0x01, 0x22, 0x30, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x7a, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x7a, 0x4e, 0x6f,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x28, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x22, 0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd1, 0x03, 0x0a, 0x10, 0x5a, 0x6f, 0x6f, 0x6b, 0x65,
	0x65, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a,
	0x08, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65,
	0x70, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a,
	0x0c, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x42,
	0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdd, 0x03, 0x0a, 0x11, 0x5a,
	0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x6f, 0x6f,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x37, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x6f, 0x6f,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x43, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65,
	0x70, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x38, 0x0a, 0x0b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x6f, 0x6f,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x57, 0x0a, 0x09, 0x5a, 0x6f,
	0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x5a,
	0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x7a, 0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x69, 0x6b, 0x65, 0x6b, 0x75, 0x6c, 0x69, 0x6e, 0x73, 0x6b, 0x69, 0x2f, 0x7a,
	0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x7a,
	0x6f, 0x6f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zookeeper_proto_rawDescOnce sync.Once
	file_zookeeper_proto_rawDescData = file_zookeeper_proto_rawDesc
)

func file_zookeeper_proto_rawDescGZIP() []byte {
	file_zookeeper_proto_rawDescOnce.Do(func() {
		file_zookeeper_proto_rawDescData = protoimpl.X.CompressGZIP(file_zookeeper_proto_rawDescData)
	})
	return file_zookeeper_proto_rawDescData
}

var file_zookeeper_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_zookeeper_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_zookeeper_proto_goTypes = []interface{}{
	(CreateRequest_Flag)(0),     // 0: zookeeper.CreateRequest.Flag
	(*Heartbeat)(nil),           // 1: zookeeper.Heartbeat
	(*CreateRequest)(nil),       // 2: zookeeper.CreateRequest
	(*CreateResponse)(nil),      // 3: zookeeper.CreateResponse
	(*DeleteRequest)(nil),       // 4: zookeeper.DeleteRequest
	(*DeleteResponse)(nil),      // 5: zookeeper.DeleteResponse
	(*ExistsRequest)(nil),       // 6: zookeeper.ExistsRequest
	(*ExistsResponse)(nil),      // 7: zookeeper.ExistsResponse
	(*GetDataRequest)(nil),      // 8: zookeeper.GetDataRequest
	(*GetDataResponse)(nil),     // 9: zookeeper.GetDataResponse
	(*SetDataRequest)(nil),      // 10: zookeeper.SetDataRequest
	(*SetDataResponse)(nil),     // 11: zookeeper.SetDataResponse
	(*GetChildrenRequest)(nil),  // 12: zookeeper.GetChildrenRequest
	(*GetChildrenResponse)(nil), // 13: zookeeper.GetChildrenResponse
	(*SyncRequest)(nil),         // 14: zookeeper.SyncRequest
	(*SyncResponse)(nil),        // 15: zookeeper.SyncResponse
	(*ZookeeperRequest)(nil),    // 16: zookeeper.ZookeeperRequest
	(*ZookeeperResponse)(nil),   // 17: zookeeper.ZookeeperResponse
	(*WatchEvent)(nil),          // 18: zookeeper.WatchEvent
}
var file_zookeeper_proto_depIdxs = []int32{
	0,  // 0: zookeeper.CreateRequest.flags:type_name -> zookeeper.CreateRequest.Flag
	1,  // 1: zookeeper.ZookeeperRequest.heartbeat:type_name -> zookeeper.Heartbeat
	2,  // 2: zookeeper.ZookeeperRequest.create:type_name -> zookeeper.CreateRequest
	4,  // 3: zookeeper.ZookeeperRequest.delete:type_name -> zookeeper.DeleteRequest
	6,  // 4: zookeeper.ZookeeperRequest.exists:type_name -> zookeeper.ExistsRequest
	8,  // 5: zookeeper.ZookeeperRequest.get_data:type_name -> zookeeper.GetDataRequest
	10, // 6: zookeeper.ZookeeperRequest.set_data:type_name -> zookeeper.SetDataRequest
	12, // 7: zookeeper.ZookeeperRequest.get_children:type_name -> zookeeper.GetChildrenRequest
	14, // 8: zookeeper.ZookeeperRequest.sync:type_name -> zookeeper.SyncRequest
	3,  // 9: zookeeper.ZookeeperResponse.create:type_name -> zookeeper.CreateResponse
	5,  // 10: zookeeper.ZookeeperResponse.delete:type_name -> zookeeper.DeleteResponse
	7,  // 11: zookeeper.ZookeeperResponse.exists:type_name -> zookeeper.ExistsResponse
	9,  // 12: zookeeper.ZookeeperResponse.get_data:type_name -> zookeeper.GetDataResponse
	11, // 13: zookeeper.ZookeeperResponse.set_data:type_name -> zookeeper.SetDataResponse
	13, // 14: zookeeper.ZookeeperResponse.get_children:type_name -> zookeeper.GetChildrenResponse
	15, // 15: zookeeper.ZookeeperResponse.sync:type_name -> zookeeper.SyncResponse
	18, // 16: zookeeper.ZookeeperResponse.watch_event:type_name -> zookeeper.WatchEvent
	16, // 17: zookeeper.Zookeeper.Message:input_type -> zookeeper.ZookeeperRequest
	17, // 18: zookeeper.Zookeeper.Message:output_type -> zookeeper.ZookeeperResponse
	18, // [18:19] is the sub-list for method output_type
	17, // [17:18] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_zookeeper_proto_init() }
func file_zookeeper_proto_init() {
	if File_zookeeper_proto != nil {
		return
	}
	file_watch_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zookeeper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChildrenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZookeeperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zookeeper_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZookeeperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zookeeper_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ZookeeperRequest_Heartbeat)(nil),
		(*ZookeeperRequest_Create)(nil),
		(*ZookeeperRequest_Delete)(nil),
		(*ZookeeperRequest_Exists)(nil),
		(*ZookeeperRequest_GetData)(nil),
		(*ZookeeperRequest_SetData)(nil),
		(*ZookeeperRequest_GetChildren)(nil),
		(*ZookeeperRequest_Sync)(nil),
	}
	file_zookeeper_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ZookeeperResponse_Create)(nil),
		(*ZookeeperResponse_Delete)(nil),
		(*ZookeeperResponse_Exists)(nil),
		(*ZookeeperResponse_GetData)(nil),
		(*ZookeeperResponse_SetData)(nil),
		(*ZookeeperResponse_GetChildren)(nil),
		(*ZookeeperResponse_Sync)(nil),
		(*ZookeeperResponse_WatchEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zookeeper_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zookeeper_proto_goTypes,
		DependencyIndexes: file_zookeeper_proto_depIdxs,
		EnumInfos:         file_zookeeper_proto_enumTypes,
		MessageInfos:      file_zookeeper_proto_msgTypes,
	}.Build()
	File_zookeeper_proto = out.File
	file_zookeeper_proto_rawDesc = nil
	file_zookeeper_proto_goTypes = nil
	file_zookeeper_proto_depIdxs = nil
}
